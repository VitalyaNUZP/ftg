# ---------------------------------------------------------------------------------
#  ,_     _          
#  |\_,-~/          
#  / _  _ |    ,--.  üåê This module was loaded through https://t.me/hikkamods_bot
# (  @  @ )   / ,-'  üîì Not licensed.
#  \  _T_/-._( (     
#  /         `. \    ‚ö†Ô∏è Owner of this bot doesn't take responsibility for any
# |         _  \ |   errors caused by this module or this module being non-working
#  \ \ ,  /      |   and doesn't take ownership of any copyrighted material.
#   || |-_\__   /    
#  ((_/`(____,-'     
# ---------------------------------------------------------------------------------
# Name: SearchMusic
# Description: –ú–æ–¥—É–ª—å SearchMusic - –ø–æ–∏—Å–∫ –º—É–∑—ã–∫–∏
# –†–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ –±–æ—Ç–∞ @vkmusic_bot, –∞ —Ç–∞–∫–æ–∂ @lybot –∏ @vkmusbot
# Author: SekaiYoneya
# Edit: @vitalyatroz
# Commands:
# .sm / .sm2 / .sm3 - –ø–æ–∏—Å–∫ –º—É–∑—ã–∫–∏ –ø–æ —Ä–∞–∑–Ω—ã–º –±–æ—Ç–∞–º
# ---------------------------------------------------------------------------------

# @Sekai_Yoneya / @vitalyatroz


import logging
import xml.etree.ElementTree as ET
from typing import Union

import httpx
from aiogram.types import (InlineKeyboardButton, InlineKeyboardMarkup,
                           InlineQueryResultArticle, InputTextMessageContent)
from bs4 import BeautifulSoup

from .. import loader, utils
from ..inline.types import InlineQuery
from ..utils import rand


@loader.tds
class SearchMusicMod(loader.Module):
    """
    –ú–æ–¥—É–ª—å SearchMusic - –ø–æ–∏—Å–∫ –º—É–∑—ã–∫–∏
    –†–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ –±–æ—Ç–∞ @vkmusic_bot, @lybot –∏ @vkmusbot
    """

    strings = {"name": "SearchMusic"}

    async def smcmd(self, message):
        """ - ¬´–Ω–∞–∑–≤–∞–Ω–∏–µ¬ª —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –º—É–∑—ã–∫—É –≤ @vkmusic_bot."""
        args = utils.get_args_raw(message)
        reply = await message.get_reply_message()
        if not args:
            return await message.edit("<b>–ù–µ—Ç—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.</b>")
        try:
            await message.edit("<b>–ó–∞–≥—Ä—É–∑–∫–∞...</b>")
            music = await message.client.inline_query("vkmusic_bot", args)
            await message.delete()
            await message.client.send_file(
                message.to_id,
                music[0].result.document,
                reply_to=reply.id if reply else None,
            )
        except:
            return await message.client.send_message(
                message.chat_id,
                f"<b>–ú—É–∑—ã–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º <code>{args}</code> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.</b>",
            )
    
    async def sm2cmd(self, message):
        """ - ¬´–Ω–∞–∑–≤–∞–Ω–∏–µ¬ª —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –º—É–∑—ã–∫—É –≤ @lybot."""
        args = utils.get_args_raw(message)
        reply = await message.get_reply_message()
        if not args:
            return await message.edit("<b>–ù–µ—Ç—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.</b>")
        try:
            await message.edit("<b>–ó–∞–≥—Ä—É–∑–∫–∞...</b>")
            music = await message.client.inline_query("lybot", args)
            await message.delete()
            await message.client.send_file(
                message.to_id,
                music[0].result.document,
                reply_to=reply.id if reply else None,
            )
        except:
            return await message.client.send_message(
                message.chat_id,
                f"<b>–ú—É–∑—ã–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º <code>{args}</code> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.</b>",
            )
    
    async def sm3cmd(self, message):
        """ - ¬´–Ω–∞–∑–≤–∞–Ω–∏–µ¬ª —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –º—É–∑—ã–∫—É –≤ @vkmusbot."""
        args = utils.get_args_raw(message)
        reply = await message.get_reply_message()
        if not args:
            return await message.edit("<b>–ù–µ—Ç—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.</b>")
        try:
            await message.edit("<b>–ó–∞–≥—Ä—É–∑–∫–∞...</b>")
            music = await message.client.inline_query("vkmusbot", args)
            await message.delete()
            await message.client.send_file(
                message.to_id,
                music[0].result.document,
                reply_to=reply.id if reply else None,
            )
        except:
            return await message.client.send_message(
                message.chat_id,
                f"<b>–ú—É–∑—ã–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º <code>{args}</code> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.</b>",
            )
    async def smallcmd(self, message):
        """ - ¬´–Ω–∞–∑–≤–∞–Ω–∏–µ¬ª —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –º—É–∑—ã–∫—É."""
        args = utils.get_args_raw(message)
        reply = await message.get_reply_message()
        if not args:
            return await message.edit("<b>–ù–µ—Ç—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.</b>")
        try:
            await message.edit("<b>–ó–∞–≥—Ä—É–∑–∫–∞...</b>")
            music = await message.client.inline_query("vkmusic_bot", args)
            music2 = await message.client.inline_query("lybot", args)
            music3 = await message.client.inline_query("vkmusbot", args)
            await message.delete()
            await message.client.send_file(
                message.to_id,
                music[0].result.document,
                reply_to=reply.id if reply else None,
            )
            await message.client.send_file(
                message.to_id,
                music2[0].result.document,
                reply_to=reply.id if reply else None,
            )
            await message.client.send_file(
                message.to_id,
                music3[0].result.document,
                reply_to=reply.id if reply else None,
            )
        except:
            return await message.client.send_message(
                message.chat_id,
                f"<b>–ú—É–∑—ã–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º <code>{args}</code> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.</b>",
            )